===============================
The `5-text_indentation` module
===============================

`text_indentation(text)` print a text with 2 new
lines after each of these characters `.`, `?`, and `:`

Using `text_indentation`
----------------------------------------------------

0.Importing function form module:
	    >>> text_indentation = __import__('5-text_indentation').text_indentation

1.Calling with a string:
	    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
	    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	    <BLANKLINE>
	    Quonam modo?
	    <BLANKLINE>
	    Utrum igitur tibi litteram videor an totas paginas commovere?
	    <BLANKLINE>
	    Non autem hoc:
	    <BLANKLINE>
	    igitur ne illud quidem.
	    <BLANKLINE>
	    Fortasse id optimum, sed ubi illud:
	    <BLANKLINE>
	    Plus semper voluptatis?
	    <BLANKLINE>
	    Teneo, inquit, finem illi videri nihil dolere.
	    <BLANKLINE>
	    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
	    <BLANKLINE>
	    Si id dicis, vicimus.
	    <BLANKLINE>
	    Inde sermone vario sex illa a Dipylo stadia confecimus.
	    <BLANKLINE>
	    Sin aliud quid voles, postea.
	    <BLANKLINE>
	    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
	    <BLANKLINE>
	    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

3.Calling with a list:
	  >>> text_indentation(["This is a text."])
	  Traceback (most recent call last):
	  	    ...
	  TypeError: text must be a string

4.Calling with a int/float:
	  >>> text_indentation(12345.7)
	  Traceback (most recent call last):
	  	    ...
	  TypeError: text must be a string

5.Calling with a text that does not have `.`, `?` and `:`:
	  >>> text_indentation("""ALX and Holberton are awsome, I really enjoy the program; C and Python are amazing; thanks to ALX I will become a great software engineer""")
	  ALX and Holberton are awsome, I really enjoy the program; C and Python are amazing; thanks to ALX I will become a great software engineer

6.Calling with one word an space around:
	  >>> text_indentation("   ALX   .")
	  ALX.
	  <BLANKLINE>

7.Calling with all spcial characters:
	  >>> text_indentation(".?:")
	  .
	  <BLANKLINE>
	  ?
	  <BLANKLINE>
	  :
	  <BLANKLINE>

8.Calling with a small space:
	  >>> text_indentation("     ")

9.Calling with a new line character:
	  >>> text_indentation("\n")
	  <BLANKLINE>

10.Calling with small space and new line character:
	   >>> text_indentation("    \n   ")
	   <BLANKLINE>

11.CAlling with special character mixed with new line character:
	   >>> text_indentation("\n.\n?\n:")
	   <BLANKLINE>
	   .
	   <BLANKLINE>
	   <BLANKLINE>
	   ?
	   <BLANKLINE>
	   <BLANKLINE>
	   :
	   <BLANKLINE>

12.Calling with no arg:
	   >>> text_indentation()
	   Traceback (most recent call last):
	   	     ...
	   TypeError: text_indentation() missing 1 required positional argument: 'text'

